Έχουν γίνει[X] / πρέπει να γίνουν:
1)Robustness diagram για use case 1[] 
2)Robustness diagram για use case 2[] 
3)Robustness diagram για use case 3[]
4)Robustness diagram για use case 4[Χ]
5)Robustness diagram για use case 5[X]
6)Robustness diagram για use case 6[X]
7)Robustness diagram για use case 7[X]
8)Robustness diagram για use case 8[X]
9)Robustness diagram για use case 9[X]
10)Robustness diagram για use case 10[X]

11)sequence diagram για use case 1[]
12)sequence diagram για use case 2[]
13)sequence diagram για use case 3[]
14)sequence diagram για use case 4[]
15)sequence diagram για use case 5[]
16)sequence diagram για use case 6[]
17)sequence diagram για use case 7[]
18)sequence diagram για use case 8[]
19)sequence diagram για use case 9[]
20)sequence diagram για use case 10[]



---------------CODE ROADMAP------------------
PRIORITY: <---


---gui---
-panels[x]Σωτηρης
-block creator[x]Σωτηρης
-specific creators for subclasses[]
-declarations[X]Σωτηρης
-varlist[X]
--output[X]Σωτηρης


---class 'block'---[]
-drag and drop[x]Σωτηρης
-delete[x]Σωτηρης 
-delete ena apo ta block se seira kanei shift ta alla aristera[X]<---Βασίλης
--na rotaei prin to diagrafei[]
-stay in panel[x]Σωτηρης
-check and use input[X] <--- Σωτηρης
-snap to other blocks[X] <---Βασίλης
-snap animation ghost block[X]<---Βασίλης
-unsnap with delay[X] <---Βασίλης
-snapping info stored[X]<---Βασίλης

-block list[] <---Σωτηρης

--subclasses for block:
start[] <---
end[] <---
math block[] <---
if block[]
end if[]
while block[]
end while[]

-run the list[]

-debug mode[]
-function[]

-undo/redo[]
-save[]